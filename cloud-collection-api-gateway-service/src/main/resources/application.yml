eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8086
spring:
  application:
    name: cloud-collection-api-gateway-service
  cloud:
    gateway:
      default-filters:
      - PrefixPath=/httpbin
      - AddResponseHeader=X-Response-Default-Foo, Default-Bar

      routes:
      # =====================================
      # to run server
      # $ wscat --listen 9000
      # to run client
      # $ wscat --connect ws://localhost:8080/echo
      - id: websocket_test
        uri: ws://localhost:9000
        order: 9000
        predicates:
        - Path=/echo
      # =====================================
      - id: default_path_to_httpbin
        uri: ${test.uri}
        order: 10000
        predicates:
        - Path=/**
zuul:
  routes:
    # 所有/coreService开头的请求路由到此服务 eg.http://localhost:8086/coreService/main/coreServiceTest1 
    api-a:
      path: /coreService/**
      # 此种方式需要ribbon实现的软负载均衡支持
      serviceId: cloud-collection-core-service
    api-b:
      # 所有/coreService开头的请求路由到这个url来处理
      path: /coreService/**
      # zuul默认会过滤掉这些header,类似黑名单，不会把这些header发送给上游服务器
      sensitiveHeaders: Cookie,Set-Cookie,Authorization
      url: http://localhost:8078/
    customers: /customers/**
    # 这是一个兜底路由，所有上面未匹配的都路由到此  
  host:
    connect-timeout-millis: 5000
    socket-timeout-millis: 5000
#    legacy:
#      path: /**
#      url: http://localhost:8086
management:
  endpoints:
    web:
      exposure:
        include:
        # 通过http形式暴露endpoint
        - info
        - health
        # zuul两个endpoint 路由和过滤器暴露
        - routes
        - filters
        - metrics
          
test:
  #  hostport: httpbin.org:80
  #  hostport: localhost:5000
  #  uri: http://${test.hostport}
  uri: lb://httpbin          